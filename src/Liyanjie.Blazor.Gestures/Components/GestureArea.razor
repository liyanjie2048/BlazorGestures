<CascadingValue Value="@(this)">
    <div class="gesturearea"
         @ontouchstart="@(TouchStart)" @ontouchstart:preventDefault
         @ontouchmove="@(TouchMove)" @ontouchmove:preventDefault
         @ontouchend="@(TouchEnd)" @ontouchend:preventDefault
         @onmousedown="@(MouseDown)" @onmousedown:preventDefault
         @onmousemove="@(MouseMove)" @onmousemove:preventDefault
         @onmouseup="@(MouseUp)" @onmouseup:preventDefault>
        @ChildContent
    </div>
</CascadingValue>

@code {
    [Parameter] public RenderFragment? ChildContent { get; set; }
    [Parameter] public bool AllowMouseSimulation { get; set; }

    public bool GestureStart { get; set; }
    public DateTime GestureStartTime { get; set; }
    public int GestureDuration => (int)(DateTime.Now - GestureStartTime).TotalMilliseconds;

    public TouchPoint[]? StartPoints { get; set; }
    public TouchPoint[]? CurrentPoints { get; set; }

    public EventHandler<TouchEventArgs>? GestureStarted { get; set; }
    public EventHandler<TouchEventArgs>? GestureMoved { get; set; }
    public EventHandler<TouchEventArgs>? GestureEnded { get; set; }

    void TouchStart(TouchEventArgs e)
    {
        GestureStart = true;
        GestureStartTime = DateTime.Now;
        StartPoints = e.Touches;
        CurrentPoints = e.Touches;
        GestureStarted?.Invoke(this, e);
    }
    void TouchMove(TouchEventArgs e)
    {
        CurrentPoints = e.Touches;
        GestureMoved?.Invoke(this, e);
    }
    void TouchEnd(TouchEventArgs e)
    {
        GestureEnded?.Invoke(this, e);
    }

    void MouseDown(MouseEventArgs e)
    {
        if (AllowMouseSimulation)
            TouchStart(new()
                {
                    Type = "mousedown",
                    Touches = GetTouchPoint(e),
                    TargetTouches = GetTouchPoint(e),
                    ChangedTouches = GetTouchPoint(e),
                });
    }
    void MouseMove(MouseEventArgs e)
    {
        if (AllowMouseSimulation)
            TouchMove(new()
                {
                    Type = "mousemove",
                    Touches = GetTouchPoint(e),
                    TargetTouches = GetTouchPoint(e),
                    ChangedTouches = GetTouchPoint(e),
                });
    }
    void MouseUp(MouseEventArgs e)
    {
        if (AllowMouseSimulation)
            TouchEnd(new()
                {
                    Type = "mouseup",
                    Touches = Array.Empty<TouchPoint>(),
                    TargetTouches = Array.Empty<TouchPoint>(),
                    ChangedTouches = GetTouchPoint(e),
                });
    }

    TouchPoint[] GetTouchPoint(MouseEventArgs e)
    {
#if NET6_0_OR_GREATER
        return new TouchPoint[]{ new() { ClientX = e.ClientX, ClientY = e.ClientY, PageX = e.PageX, PageY = e.PageY, ScreenX = e.ScreenX, ScreenY = e.ScreenY }};
#else
        return new TouchPoint[] { new() { ClientX = e.ClientX, ClientY = e.ClientY, ScreenX = e.ScreenX, ScreenY = e.ScreenY } };
#endif
    }
}
